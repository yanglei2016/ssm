<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yang.ssm.dao.MenuMapper">
	<resultMap id="BaseResultMap" type="com.yang.ssm.domain.Menu" >
		<id column="menu_id" property="menuId" jdbcType="VARCHAR" />
		<result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="req_url" property="reqUrl" jdbcType="VARCHAR" />
		<result column="menu_type" property="menuType" jdbcType="VARCHAR" />
		<result column="menu_level" property="menuLevel" jdbcType="INTEGER" />
		<result column="order_seq" property="orderSeq" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List" >
		menu_id, menu_name, parent_id, req_url, menu_type, menu_level, order_seq
	</sql>
  
	<select id="selectMenuList" resultType="com.yang.ssm.domain.Menu">
		<include refid="listSQL"/>
	 order by 
		 	menu_level,
			order_seq
	</select>
	<select id="selectTreeMenuList" parameterType="java.lang.String" resultType="com.yang.ssm.domain.Menu">
		select 
			t.menu_id,
			t.menu_name,
			t.parent_id,
			t.req_url,
			t.menu_type,
			t.menu_level,
			t.order_seq
		from sys_menu t
		left join sys_role_menu a on a.menu_id = t.menu_id
		left join sys_role b on b.role_id = a.role_id
		left join sys_user_role c on c.role_id = b.role_id
		where c.user_id = #{userId,jdbcType=VARCHAR}
		  and t.menu_id > '0'
		  and t.menu_type = 'M'
	 order by 
		 	t.menu_level,
			t.order_seq
	</select>
	<sql id="listSQL">
		select
			<include refid="Base_Column_List" />
		from
			sys_menu
	</sql>
	
	<select id="selectOneMenu" parameterType="java.lang.String" resultType="com.yang.ssm.domain.Menu">
		<include refid="listSQL"/>
		where menu_id = #{menuId}
	</select>
	
	<delete id="deleteMenuByMenuIds" parameterType="java.util.Map">
		delete from sys_menu 
		where menu_id in 
		<foreach collection="menuIdList" item="menuId" open="(" close=")" separator=", ">
			#{menuId}
		</foreach>
	</delete>
	
	<insert id="insert" parameterType="com.yang.ssm.domain.Menu" >
	    insert into sys_menu (
	    	<include refid="Base_Column_List" />
	    )
	    values (#{menuId,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
	      #{reqUrl,jdbcType=VARCHAR}, #{menuType,jdbcType=VARCHAR}, #{menuLevel,jdbcType=INTEGER}, 
	      #{orderSeq,jdbcType=INTEGER})
	</insert>
	
	<update id="updateByMenuId" parameterType="com.yang.ssm.domain.Menu" >
    	update sys_menu
		<set >
		  <if test="menuName != null" >
		    menu_name = #{menuName,jdbcType=VARCHAR},
		  </if>
		  <if test="parentId != null" >
		    parent_id = #{parentId,jdbcType=VARCHAR},
		  </if>
		  <if test="reqUrl != null" >
		    req_url = #{reqUrl,jdbcType=VARCHAR},
		  </if>
		  <if test="menuType != null" >
		    menu_type = #{menuType,jdbcType=VARCHAR},
		  </if>
		  <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(menuLevel)" >
		    menu_level = #{menuLevel,jdbcType=INTEGER},
		  </if>
		  <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(orderSeq)" >
		    order_seq = #{orderSeq,jdbcType=INTEGER},
		  </if>
		</set>
		where menu_id = #{menuId,jdbcType=VARCHAR}
	</update>
	
	<select id="selectMenuByUserId" parameterType="java.lang.String" resultType="com.yang.ssm.domain.Menu">
		select 
			t.menu_id,
			t.menu_name,
			t.parent_id,
			t.req_url,
			t.menu_type,
			t.menu_level,
			t.order_seq
		from sys_menu t
		left join sys_role_menu a on a.menu_id = t.menu_id
		left join sys_role b on b.role_id = a.role_id
		left join sys_user_role c on c.role_id = b.role_id
		where c.user_id = #{userId,jdbcType=VARCHAR}
	</select>
</mapper>
